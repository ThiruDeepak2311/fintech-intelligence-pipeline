{"ast":null,"code":"// Mock data service - simulates your real database data\nclass DatabaseService {\n  constructor() {\n    this.mockData = this.generateMockData();\n  }\n  generateMockData() {\n    return {\n      latest: {\n        id: 7,\n        date: '2025-09-12',\n        symbol: 'AAPL',\n        stockData: {\n          open: 229.22,\n          close: 234.07,\n          high: 234.51,\n          low: 229.02,\n          volume: 55824216,\n          vwap: 231.5,\n          transactions: 850000,\n          change: 4.85,\n          changePercent: 2.12\n        },\n        aiAnalysis: {\n          sentiment: 'bullish',\n          riskScore: 6,\n          pricePrediction: 235.0,\n          recommendations: ['Buy AAPL due to strong quarterly earnings', 'AAPL is a good long-term investment opportunity', 'The recent price increase is a buying signal'],\n          analysis: 'AAPL shows strong momentum, expect continued growth',\n          model: 'meta-llama/llama-3.2-3b-instruct:free'\n        }\n      },\n      historical: [{\n        date: '2025-09-10',\n        open: 232.185,\n        close: 226.79,\n        high: 232.42,\n        low: 225.95,\n        volume: 83440810,\n        vwap: 229.6\n      }, {\n        date: '2025-09-11',\n        open: 226.875,\n        close: 230.03,\n        high: 230.45,\n        low: 226.65,\n        volume: 50208578,\n        vwap: 228.5\n      }, {\n        date: '2025-09-12',\n        open: 229.22,\n        close: 234.07,\n        high: 234.51,\n        low: 229.02,\n        volume: 55824216,\n        vwap: 231.5\n      }],\n      recommendations: [{\n        date: '2025-09-12',\n        symbol: 'AAPL',\n        sentiment: 'bullish',\n        riskScore: 6,\n        pricePrediction: 235.0,\n        actualPrice: 234.07,\n        recommendations: ['Buy AAPL due to strong quarterly earnings', 'Good long-term investment'],\n        changePercent: 2.12,\n        predictionAccuracy: 99.6\n      }, {\n        date: '2025-09-11',\n        symbol: 'AAPL',\n        sentiment: 'bullish',\n        riskScore: 6,\n        pricePrediction: 225.5,\n        actualPrice: 230.03,\n        recommendations: ['Buy AAPL for long term growth', 'Hold for stable financials'],\n        changePercent: 1.39,\n        predictionAccuracy: 98.0\n      }],\n      metrics: {\n        totalDaysAnalyzed: 7,\n        totalRecommendations: 7,\n        sentimentDistribution: {\n          bullish: 4,\n          bearish: 3\n        },\n        averageRiskScore: 6.43,\n        priceMetrics: {\n          minPrice: 226.79,\n          maxPrice: 234.07,\n          avgPrice: 230.3,\n          avgVolume: 63157868\n        }\n      }\n    };\n  }\n  async getLatestStockData() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return this.mockData.latest;\n  }\n  async getHistoricalData(days = 30) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    return this.mockData.historical;\n  }\n  async getAllRecommendations() {\n    await new Promise(resolve => setTimeout(resolve, 400));\n    return this.mockData.recommendations;\n  }\n  async getPerformanceMetrics() {\n    await new Promise(resolve => setTimeout(resolve, 200));\n    return this.mockData.metrics;\n  }\n}\nconst databaseService = new DatabaseService();\nexport default databaseService;","map":{"version":3,"names":["DatabaseService","constructor","mockData","generateMockData","latest","id","date","symbol","stockData","open","close","high","low","volume","vwap","transactions","change","changePercent","aiAnalysis","sentiment","riskScore","pricePrediction","recommendations","analysis","model","historical","actualPrice","predictionAccuracy","metrics","totalDaysAnalyzed","totalRecommendations","sentimentDistribution","bullish","bearish","averageRiskScore","priceMetrics","minPrice","maxPrice","avgPrice","avgVolume","getLatestStockData","Promise","resolve","setTimeout","getHistoricalData","days","getAllRecommendations","getPerformanceMetrics","databaseService"],"sources":["C:/Users/Deepak Thirukkumaran/OneDrive/Desktop/stealth/finpipe/dashboard/src/services/database.js"],"sourcesContent":["// Mock data service - simulates your real database data\r\nclass DatabaseService {\r\n  constructor() {\r\n    this.mockData = this.generateMockData();\r\n  }\r\n\r\n  generateMockData() {\r\n    return {\r\n      latest: {\r\n        id: 7,\r\n        date: '2025-09-12',\r\n        symbol: 'AAPL',\r\n        stockData: {\r\n          open: 229.22,\r\n          close: 234.07,\r\n          high: 234.51,\r\n          low: 229.02,\r\n          volume: 55824216,\r\n          vwap: 231.5,\r\n          transactions: 850000,\r\n          change: 4.85,\r\n          changePercent: 2.12\r\n        },\r\n        aiAnalysis: {\r\n          sentiment: 'bullish',\r\n          riskScore: 6,\r\n          pricePrediction: 235.0,\r\n          recommendations: [\r\n            'Buy AAPL due to strong quarterly earnings',\r\n            'AAPL is a good long-term investment opportunity',\r\n            'The recent price increase is a buying signal'\r\n          ],\r\n          analysis: 'AAPL shows strong momentum, expect continued growth',\r\n          model: 'meta-llama/llama-3.2-3b-instruct:free'\r\n        }\r\n      },\r\n      historical: [\r\n        { date: '2025-09-10', open: 232.185, close: 226.79, high: 232.42, low: 225.95, volume: 83440810, vwap: 229.6 },\r\n        { date: '2025-09-11', open: 226.875, close: 230.03, high: 230.45, low: 226.65, volume: 50208578, vwap: 228.5 },\r\n        { date: '2025-09-12', open: 229.22, close: 234.07, high: 234.51, low: 229.02, volume: 55824216, vwap: 231.5 }\r\n      ],\r\n      recommendations: [\r\n        {\r\n          date: '2025-09-12',\r\n          symbol: 'AAPL',\r\n          sentiment: 'bullish',\r\n          riskScore: 6,\r\n          pricePrediction: 235.0,\r\n          actualPrice: 234.07,\r\n          recommendations: ['Buy AAPL due to strong quarterly earnings', 'Good long-term investment'],\r\n          changePercent: 2.12,\r\n          predictionAccuracy: 99.6\r\n        },\r\n        {\r\n          date: '2025-09-11',\r\n          symbol: 'AAPL',\r\n          sentiment: 'bullish',\r\n          riskScore: 6,\r\n          pricePrediction: 225.5,\r\n          actualPrice: 230.03,\r\n          recommendations: ['Buy AAPL for long term growth', 'Hold for stable financials'],\r\n          changePercent: 1.39,\r\n          predictionAccuracy: 98.0\r\n        }\r\n      ],\r\n      metrics: {\r\n        totalDaysAnalyzed: 7,\r\n        totalRecommendations: 7,\r\n        sentimentDistribution: { bullish: 4, bearish: 3 },\r\n        averageRiskScore: 6.43,\r\n        priceMetrics: {\r\n          minPrice: 226.79,\r\n          maxPrice: 234.07,\r\n          avgPrice: 230.3,\r\n          avgVolume: 63157868\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  async getLatestStockData() {\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    return this.mockData.latest;\r\n  }\r\n\r\n  async getHistoricalData(days = 30) {\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n    return this.mockData.historical;\r\n  }\r\n\r\n  async getAllRecommendations() {\r\n    await new Promise(resolve => setTimeout(resolve, 400));\r\n    return this.mockData.recommendations;\r\n  }\r\n\r\n  async getPerformanceMetrics() {\r\n    await new Promise(resolve => setTimeout(resolve, 200));\r\n    return this.mockData.metrics;\r\n  }\r\n}\r\n\r\nconst databaseService = new DatabaseService();\r\nexport default databaseService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}